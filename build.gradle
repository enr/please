
buildscript {
  repositories {
     flatDir name: 'localRepository', dirs: 'gradle/lib' 
  }

  dependencies {
    classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.3'
  }
}

allprojects { project ->
	version = '0.1-SNAPSHOT'
	group = 'com.atoito.please'
	isSnapshot = version.endsWith("-SNAPSHOT")
	
	repositories {
        mavenLocal()
		mavenCentral()
	}
	
	javaModules = [
		':modules:core', ':modules:cli', ':modules:acceptance-tests'
	]
	
	acceptanceTests = [':modules:acceptance-tests']

}

subprojects {

	if (project.path in javaModules) {
		apply plugin: 'groovy'
        apply plugin: 'eclipse'
        apply plugin: 'license'

		configurations {
			compile.transitive = true
			testCompile.transitive = true
		}

		dependencies {
			groovy group: 'org.codehaus.groovy', name: 'groovy', version: '1.8.1'
			testCompile 'org.testng:testng:6.2',
			            'org.easytesting:fest-assert:1.4'
		}
		
		test {
            useTestNG()
        }
        
        archivesBaseName = "please-${project.name}"
		
		buildDir = 'target'

		sourceCompatibility = 1.5
		targetCompatibility = 1.5
		
        eclipseProject {
            projectName = "please-${project.name}"
        }
        eclipseClasspath {
	        // per mantenere la stessa distanza da project dir tra eclipse e gradle
	        defaultOutputDir = new File("${project.buildDir}/eclipse/classes");
	        downloadJavadoc = true
        }

	}

	if (project.path in acceptanceTests) {
		test.enabled = false
		task sut(	dependsOn: [':modules:core:test', ':modules:cli:test', ':modules:cli:installApp'],
					description: 'Builds the system under test (using installApp).') << {
					test.enabled = true
		}	
		task uat(	dependsOn: [sut, test], 
					description: 'Runs the user acceptance tests.') << {
					test.enabled = true
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-4-20110508123756+0200'
}

