
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.5.0'
    }
}

apply from: "https://launchpad.net/gradle-release/trunk/latest/+download/apply.groovy"

ext {
    javaModules = [
        ':modules:core', ':modules:cli', ':modules:acceptance-tests'
    ]
    
    acceptanceTests = [':modules:acceptance-tests']
}

allprojects { project ->
    group = 'com.atoito.please'
    
    repositories {
        mavenLocal()
        mavenCentral()
    }
}


subprojects {

    if (project.path in javaModules) {
        apply plugin: 'groovy'
        apply plugin: 'eclipse'
        apply plugin: 'license'

        configurations {
            compile.transitive = true
            testCompile.transitive = true
        }

        dependencies {
            groovy group: 'org.codehaus.groovy', name: 'groovy', version: '1.8.1'
            testCompile 'org.testng:testng:6.5.2',
                        'org.easytesting:fest-assert-core:2.0M6'
        }
        
        test {
            useTestNG()
        }
        
        archivesBaseName = "please-${project.name}"
        
        buildDir = 'target'

        sourceCompatibility = 1.5
        targetCompatibility = 1.5
        
        eclipse {
            project {
                name = "please-${project.name}"
            }
            classpath {
                // to keep the same depth in the build from in and outside Eclipse
                defaultOutputDir = new File("${project.buildDir}/eclipse/classes");
                downloadJavadoc = true
            }
        }
    }

    if (project.path in acceptanceTests) {
        test.enabled = false
        task sut(   dependsOn: [':modules:core:test', ':modules:cli:test', ':modules:cli:installApp'],
                    description: 'Builds the system under test (using installApp).') << {
                    test.enabled = true
        }    
        task uat(   dependsOn: [sut, test], 
                    description: 'Runs the user acceptance tests.') << {
                    test.enabled = true
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.1'
}

