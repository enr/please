<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="18" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Gradle suite" duration-ms="1303" started-at="2012-02-24T21:46:36Z" finished-at="2012-02-24T21:46:38Z">
    <groups>
    </groups>
    <test name="Gradle test" duration-ms="1303" started-at="2012-02-24T21:46:36Z" finished-at="2012-02-24T21:46:38Z">
      <class name="com.atoito.please.test.unit.OpsFileTest">
        <test-method status="PASS" signature="testSimple()[pri:0, instance:com.atoito.please.test.unit.OpsFileTest@ed5d9d]" name="testSimple" duration-ms="51" started-at="2012-02-24T21:46:38Z" description="ops file is loaded" finished-at="2012-02-24T21:46:38Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.DefaultRegistryTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="setUp" is-config="true" duration-ms="2" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="loadDefinitionsUrl()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="loadDefinitionsUrl" duration-ms="406" started-at="2012-02-24T21:46:37Z" description="registry loads operations in custom definitions file" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="loadOpsFile()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="loadOpsFile" duration-ms="270" started-at="2012-02-24T21:46:37Z" description="registry loads ops file" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="loadPluginsDefinitions()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="loadPluginsDefinitions" duration-ms="25" started-at="2012-02-24T21:46:37Z" description="registry loads operations in META-INF/plugin-definitions.please" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.atoito.please.test.unit.DefaultRegistryTest@bb2bc3]" name="tearDown" is-config="true" duration-ms="0" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.CopySingleFileActionTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.atoito.please.test.unit.CopySingleFileActionTest@19b4748]" name="setUp" is-config="true" duration-ms="2" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="copySingleFile()[pri:0, instance:com.atoito.please.test.unit.CopySingleFileActionTest@19b4748]" name="copySingleFile" duration-ms="49" started-at="2012-02-24T21:46:37Z" description="if &#039;to&#039; points to an inexistent file, the original file is copied to this path" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="copySingleFileToExistentDirectory()[pri:0, instance:com.atoito.please.test.unit.CopySingleFileActionTest@19b4748]" name="copySingleFileToExistentDirectory" duration-ms="2" started-at="2012-02-24T21:46:37Z" description="if &#039;to&#039; points to an existent directory, the file is copied with the original&#039;s base name" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="failsIfFromDoensNotExist()[pri:0, instance:com.atoito.please.test.unit.CopySingleFileActionTest@19b4748]" name="failsIfFromDoensNotExist" duration-ms="1" started-at="2012-02-24T21:46:37Z" description="if &#039;from&#039; doesn&#039;t exist and it isn&#039;t in registered outputs and checkFrom is true, action fails" finished-at="2012-02-24T21:46:37Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[file to copy '/home/enrico/Projects/please/modules/core/file-1330116397200' not found. fail]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: file to copy '/home/enrico/Projects/please/modules/core/file-1330116397200' not found. fail
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:115)
	at com.atoito.please.core.actions.CopyAction.resolveAndValidateFrom(CopyAction.java:99)
	at com.atoito.please.core.actions.CopyAction.internalInitialize(CopyAction.java:123)
	at com.atoito.please.core.api.AbstractAction.initialize(AbstractAction.java:58)
	at com.atoito.please.test.unit.CopySingleFileActionTest.failsIfFromDoensNotExist(CopySingleFileActionTest.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:691)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:883)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1208)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:754)
	at org.testng.TestRunner.run(TestRunner.java:614)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:335)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:330)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:292)
	at org.testng.SuiteRunner.run(SuiteRunner.java:241)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1169)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1094)
	at org.testng.TestNG.run(TestNG.java:1006)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:103)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:75)
	at $Proxy3.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.TypeCastDispatch.dispatch(TypeCastDispatch.java:30)
	at org.gradle.messaging.remote.internal.WorkerProtocol.handleIncoming(WorkerProtocol.java:53)
	at org.gradle.messaging.remote.internal.WorkerProtocol.handleIncoming(WorkerProtocol.java:31)
	at org.gradle.messaging.remote.internal.ProtocolStack$ProtocolStage.handleIncoming(ProtocolStack.java:167)
	at org.gradle.messaging.remote.internal.ProtocolStack$BottomStage.handleIncoming(ProtocolStack.java:277)
	at org.gradle.messaging.remote.internal.ProtocolStack$BottomConnection$1.run(ProtocolStack.java:299)
	at org.gradle.messaging.remote.internal.ProtocolStack$ExecuteRunnable.dispatch(ProtocolStack.java:120)
	at org.gradle.messaging.remote.internal.ProtocolStack$ExecuteRunnable.dispatch(ProtocolStack.java:116)
	at org.gradle.messaging.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:132)
	at org.gradle.messaging.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:33)
	at org.gradle.messaging.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:72)
	at org.gradle.messaging.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:66)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="overwriteFile()[pri:0, instance:com.atoito.please.test.unit.CopySingleFileActionTest@19b4748]" name="overwriteFile" duration-ms="9" started-at="2012-02-24T21:46:37Z" description="if &#039;to&#039; points to an existent file, this file is overwritten with the original&#039;s content" finished-at="2012-02-24T21:46:37Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.DefinitionsFileTest">
        <test-method status="PASS" signature="definitionsAreCreated()[pri:0, instance:com.atoito.please.test.unit.DefinitionsFileTest@1a41cc7]" name="definitionsAreCreated" duration-ms="25" started-at="2012-02-24T21:46:37Z" description="DefinitionsFile contains correct mapping for actions and operations" finished-at="2012-02-24T21:46:37Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.AppendActionTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.atoito.please.test.unit.AppendActionTest@9b688e]" name="setUp" is-config="true" duration-ms="6" started-at="2012-02-24T21:46:38Z" finished-at="2012-02-24T21:46:38Z">
        </test-method>
        <test-method status="PASS" signature="appendContent()[pri:0, instance:com.atoito.please.test.unit.AppendActionTest@9b688e]" name="appendContent" duration-ms="9" started-at="2012-02-24T21:46:38Z" description="content is appended to the file" finished-at="2012-02-24T21:46:38Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.OpsDslEngineTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.atoito.please.test.unit.OpsDslEngineTest@19d12cc]" name="setUp" is-config="true" duration-ms="5" started-at="2012-02-24T21:46:38Z" finished-at="2012-02-24T21:46:38Z">
        </test-method>
        <test-method status="PASS" signature="smokeTestWithStubRegistry()[pri:0, instance:com.atoito.please.test.unit.OpsDslEngineTest@19d12cc]" name="smokeTestWithStubRegistry" duration-ms="54" started-at="2012-02-24T21:46:38Z" description="smoke test for basic parsing" finished-at="2012-02-24T21:46:38Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.ArchivesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.atoito.please.test.unit.ArchivesTest@848ecc]" name="setUp" is-config="true" duration-ms="2" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="initMethod()[pri:0, instance:com.atoito.please.test.unit.ArchivesTest@848ecc]" name="initMethod" is-config="true" duration-ms="1" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="zipAndUnzip()[pri:0, instance:com.atoito.please.test.unit.ArchivesTest@848ecc]" name="zipAndUnzip" duration-ms="41" started-at="2012-02-24T21:46:37Z" description="zip archiver and expander components test" finished-at="2012-02-24T21:46:37Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.ArchiveActionsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.atoito.please.test.unit.ArchiveActionsTest@13d1402]" name="setUp" is-config="true" duration-ms="16" started-at="2012-02-24T21:46:36Z" finished-at="2012-02-24T21:46:36Z">
        </test-method>
        <test-method status="PASS" signature="zipDirectory()[pri:0, instance:com.atoito.please.test.unit.ArchiveActionsTest@13d1402]" name="zipDirectory" duration-ms="187" started-at="2012-02-24T21:46:36Z" description="the given directory is zipped to the destination file" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="unzipArchive()[pri:0, instance:com.atoito.please.test.unit.ArchiveActionsTest@13d1402]" name="unzipArchive" duration-ms="7" started-at="2012-02-24T21:46:38Z" description="the given archive is unzipped to destination" depends-on-methods="com.atoito.please.test.unit.ArchiveActionsTest.zipDirectory" finished-at="2012-02-24T21:46:38Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.DirectoriesTest">
        <test-method status="PASS" signature="initData()[pri:0, instance:com.atoito.please.test.unit.DirectoriesTest@363068]" name="initData" is-config="true" duration-ms="0" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="testFilteredListing()[pri:0, instance:com.atoito.please.test.unit.DirectoriesTest@363068]" name="testFilteredListing" duration-ms="30" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:com.atoito.please.test.unit.DirectoriesTest@363068]" name="testIsEmpty" duration-ms="5" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:37Z">
        </test-method>
        <test-method status="PASS" signature="testListing()[pri:0, instance:com.atoito.please.test.unit.DirectoriesTest@363068]" name="testListing" duration-ms="13" started-at="2012-02-24T21:46:37Z" finished-at="2012-02-24T21:46:38Z">
        </test-method>
      </class>
      <class name="com.atoito.please.test.unit.OperationClosureDelegateTest">
        <test-method status="PASS" signature="operationLoading()[pri:0, instance:com.atoito.please.test.unit.OperationClosureDelegateTest@164cbde]" name="operationLoading" duration-ms="28" started-at="2012-02-24T21:46:38Z" description="OperationClosureDelegate loads operation data through missingMethod" finished-at="2012-02-24T21:46:38Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
